[{"/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/index.js":"1","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/components/App.js":"2","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/routes/Home.js":"3","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/routes/Detail.js":"4","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/store.js":"5","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/components/ToDo.js":"6"},{"size":275,"mtime":1606982203000,"results":"7","hashOfConfig":"8"},{"size":338,"mtime":1606983880000,"results":"9","hashOfConfig":"8"},{"size":946,"mtime":1606998428000,"results":"10","hashOfConfig":"8"},{"size":420,"mtime":1606985487000,"results":"11","hashOfConfig":"8"},{"size":1160,"mtime":1606998485000,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1606998422000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1dgqcfu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/index.js",[],["30","31"],"/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/components/App.js",[],"/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/routes/Home.js",["32"],"import React from \"react\";\nimport { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionCreators, add } from \"../store\";\nimport ToDo from \"../components/ToDo\";\n\nfunction Home({ toDos, addToDo }) {\n  const [text, setText] = useState(\"\");\n  function onChange(e) {\n    setText(e.target.value);\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    addToDo(text);\n    setText(\"\");\n  }\n  return (\n    <>\n      <h1>To Do</h1>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" value={text} onChange={onChange} />\n        <button>Add</button>\n      </form>\n      <ul>\n        {toDos.map((todo, i) => (\n          <ToDo key={i} {...todo} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return { toDos: state };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToDo: (text) => dispatch(add(text)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/routes/Detail.js",[],"/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/store.js",["33","34"],"import { createStore } from \"redux\";\nimport { createAction, createReducer, createSlice } from \"@reduxjs/toolkit\";\n\n// const addToDo = createAction(\"ADD\");\n// const deleteToDo = createAction(\"DELETE\");\n\n// const reducer = (state = [], action) => {\n//   switch (action.type) {\n//     case addToDo.type:\n//       return [{ text: action.payload, id: Date.now() }, ...state];\n//     case deleteToDo.type:\n//       return state.filter((todo) => todo.id !== action.payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const reducer = createReducer(0, {\n//   [addToDo]: (state, action) => {\n//     state.push({ text: action.payload, id: Date.now() });\n//   },\n//   [deleteToDo]: (state, action) =>\n//     state.filter((todo) => todo.id !== action.payload),\n// });\n\nconst toDo = createSlice({\n  name: \"toDoReducer\",\n  initialState: [],\n  reducers: {\n    add: (state, action) => {\n      state.push({ text: action.payload, id: Date.now() });\n    },\n    remove: (state, action) =>\n      state.filter((todo) => todo.id !== action.payload),\n  },\n});\n\nconst store = createStore(toDo.reducer);\n\nexport const { add, remove } = toDo.actions;\n\nexport default store;\n","/Users/jang-won-il/Desktop/portfolio/practice/vanila-redux/src/components/ToDo.js",["35"],"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { actionCreators, remove } from \"../store\";\n\nfunction ToDo({ text, onBtnClick, id }) {\n  return (\n    <li>\n      <Link to={`/${id}`}>{text} </Link>\n      <button onClick={onBtnClick}>DEL</button>\n    </li>\n  );\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  return {\n    onBtnClick: () => dispatch(remove(props.id)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(ToDo);\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":24},{"ruleId":"40","severity":1,"message":"44","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":22},{"ruleId":"40","severity":1,"message":"45","line":2,"column":24,"nodeType":"42","messageId":"43","endLine":2,"endColumn":37},{"ruleId":"40","severity":1,"message":"41","line":4,"column":10,"nodeType":"42","messageId":"43","endLine":4,"endColumn":24},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'actionCreators' is defined but never used.","Identifier","unusedVar","'createAction' is defined but never used.","'createReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]